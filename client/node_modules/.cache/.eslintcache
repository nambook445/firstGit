[{"C:\\Users\\82103\\OneDrive\\바탕 화면\\firstGit\\client\\src\\index.js":"1","C:\\Users\\82103\\OneDrive\\바탕 화면\\firstGit\\client\\src\\App.js":"2","C:\\Users\\82103\\OneDrive\\바탕 화면\\firstGit\\client\\src\\theme.js":"3","C:\\Users\\82103\\OneDrive\\바탕 화면\\firstGit\\client\\src\\component\\Nav.js":"4","C:\\Users\\82103\\OneDrive\\바탕 화면\\firstGit\\client\\src\\component\\Write\\Write.js":"5","C:\\Users\\82103\\OneDrive\\바탕 화면\\firstGit\\client\\src\\component\\Write\\src\\Title.js":"6","C:\\Users\\82103\\OneDrive\\바탕 화면\\firstGit\\client\\src\\component\\Write\\src\\Buttton.js":"7","C:\\Users\\82103\\OneDrive\\바탕 화면\\firstGit\\client\\src\\component\\Write\\src\\Desc.js":"8","C:\\Users\\82103\\OneDrive\\바탕 화면\\firstGit\\client\\src\\component\\Table\\CollapsibleTable.js":"9"},{"size":464,"mtime":1645077836906,"results":"10","hashOfConfig":"11"},{"size":621,"mtime":1645428614505,"results":"12","hashOfConfig":"11"},{"size":335,"mtime":1644562380740,"results":"13","hashOfConfig":"11"},{"size":5290,"mtime":1645085340732,"results":"14","hashOfConfig":"11"},{"size":2178,"mtime":1645526292555,"results":"15","hashOfConfig":"11"},{"size":326,"mtime":1645517400272,"results":"16","hashOfConfig":"11"},{"size":390,"mtime":1645435766446,"results":"17","hashOfConfig":"11"},{"size":589,"mtime":1645433175906,"results":"18","hashOfConfig":"11"},{"size":6252,"mtime":1645428790950,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"ajwvc7",{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"23"},"C:\\Users\\82103\\OneDrive\\바탕 화면\\firstGit\\client\\src\\index.js",[],[],["50","51"],"C:\\Users\\82103\\OneDrive\\바탕 화면\\firstGit\\client\\src\\App.js",[],[],"C:\\Users\\82103\\OneDrive\\바탕 화면\\firstGit\\client\\src\\theme.js",[],[],"C:\\Users\\82103\\OneDrive\\바탕 화면\\firstGit\\client\\src\\component\\Nav.js",[],[],"C:\\Users\\82103\\OneDrive\\바탕 화면\\firstGit\\client\\src\\component\\Write\\Write.js",["52","53"],[],"C:\\Users\\82103\\OneDrive\\바탕 화면\\firstGit\\client\\src\\component\\Write\\src\\Title.js",[],[],"C:\\Users\\82103\\OneDrive\\바탕 화면\\firstGit\\client\\src\\component\\Write\\src\\Buttton.js",[],[],["54","55"],"C:\\Users\\82103\\OneDrive\\바탕 화면\\firstGit\\client\\src\\component\\Write\\src\\Desc.js",[],[],"C:\\Users\\82103\\OneDrive\\바탕 화면\\firstGit\\client\\src\\component\\Table\\CollapsibleTable.js",["56","57"],[],"import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableFooter from '@mui/material/TableFooter';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport FirstPageIcon from '@mui/icons-material/FirstPage';\r\nimport KeyboardArrowLeft from '@mui/icons-material/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@mui/icons-material/KeyboardArrowRight';\r\nimport LastPageIcon from '@mui/icons-material/LastPage';\r\nimport axios from 'axios';\r\nimport Accordion from '@mui/material/Accordion';\r\nimport AccordionDetails from '@mui/material/AccordionDetails';\r\nimport AccordionSummary from '@mui/material/AccordionSummary';\r\nimport Typography from '@mui/material/Typography';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\n\r\nfunction TablePaginationActions(props) {\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onPageChange } = props;\r\n\r\n  const handleFirstPageButtonClick = (event) => {\r\n    onPageChange(event, 0);\r\n  };\r\n\r\n  const handleBackButtonClick = (event) => {\r\n    onPageChange(event, page - 1);\r\n  };\r\n\r\n  const handleNextButtonClick = (event) => {\r\n    onPageChange(event, page + 1);\r\n  };\r\n\r\n  const handleLastPageButtonClick = (event) => {\r\n    onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ flexShrink: 0, ml: 2.5 }}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleBackButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"previous page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </Box>\r\n  );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onPageChange: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\n\r\n\r\nexport default function CustomPaginationActionsTable() {\r\n  const [state, setState] = React.useState([])\r\n  const [hasError, setHasError] = React.useState(false)\r\n  //Accordion component\r\n  const [expanded, setExpanded] = React.useState(false);\r\n  const handleChange = (panel) => (event, isExpanded) => {\r\n    setExpanded(isExpanded ? panel : false);\r\n  };\r\n  //Axios \r\n  React.useEffect(async () => {\r\n    await axios.get(\"http://localhost:8080/api\").then(res => setState(res.data.test)).catch(err => setHasError(true))}, []);\r\n    \r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n    const rows = state;\r\n\r\n  // Avoid a layout jump when reaching the last page with empty rows.\r\n  const emptyRows =\r\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table sx={{ minWidth: 500 }} aria-label=\"custom pagination table\">\r\n        <TableBody>\r\n          {(rowsPerPage > 0\r\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : rows\r\n          ).map((state) => (\r\n            <Accordion expanded={expanded === state.id} onChange={handleChange(state.id)}>\r\n              <AccordionSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls=\"panel1bh-content\"\r\n                id=\"panel1bh-header\"\r\n              >\r\n                <Typography sx={{ width: '33%', flexShrink: 0 }}>\r\n                  {state.title}\r\n                </Typography>\r\n                <Typography sx={{ width: '33%', flexShrink: 0 }}>\r\n                  {state.created}\r\n                </Typography>\r\n                <Typography sx={{ width: '33%', flexShrink: 0 }}>\r\n                  {state.nickname}\r\n                </Typography>\r\n              </AccordionSummary>\r\n              <AccordionDetails>\r\n                <Typography>\r\n                  {state.description}\r\n                </Typography>\r\n              </AccordionDetails>\r\n            </Accordion>\r\n          ))}\r\n          {emptyRows > 0 && (\r\n            <TableRow style={{ height: 53 * emptyRows }}>\r\n              <TableCell colSpan={6} />\r\n            </TableRow>\r\n          )}\r\n        </TableBody>\r\n        <TableFooter>\r\n          <TableRow>\r\n            <TablePagination\r\n              rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\r\n              colSpan={3}\r\n              count={rows.length}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              SelectProps={{\r\n                inputProps: {\r\n                  'aria-label': 'rows per page',\r\n                },\r\n                native: true,\r\n              }}\r\n              onPageChange={handleChangePage}\r\n              onRowsPerPageChange={handleChangeRowsPerPage}\r\n              ActionsComponent={TablePaginationActions}\r\n            />\r\n          </TableRow>\r\n        </TableFooter>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n",{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":8,"column":10,"nodeType":"64","messageId":"65","endLine":8,"endColumn":17},{"ruleId":"62","severity":1,"message":"66","line":14,"column":10,"nodeType":"64","messageId":"65","endLine":14,"endColumn":18},{"ruleId":"58","replacedBy":"67"},{"ruleId":"60","replacedBy":"68"},{"ruleId":"62","severity":1,"message":"66","line":90,"column":10,"nodeType":"64","messageId":"65","endLine":90,"endColumn":18},{"ruleId":"69","severity":1,"message":"70","line":97,"column":19,"nodeType":"71","endLine":98,"endColumn":119},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"no-unused-vars","'useForm' is defined but never used.","Identifier","unusedVar","'hasError' is assigned a value but never used.",["72"],["73"],"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-global-assign","no-unsafe-negation"]