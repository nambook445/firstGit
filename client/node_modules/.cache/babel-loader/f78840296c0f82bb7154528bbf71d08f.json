{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\82103\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\firstGit\\\\client\\\\src\\\\component\\\\Table\\\\CollapsibleTable.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Box from '@mui/material/Box';\nimport Collapse from '@mui/material/Collapse';\nimport IconButton from '@mui/material/IconButton';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Typography from '@mui/material/Typography';\nimport Paper from '@mui/material/Paper';\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\nimport axios from 'axios'; // function createData(name, calories, fat, carbs, protein, price) {\n//   return {\n//     name,\n//     calories,\n//     fat,\n//     carbs,\n//     protein,\n//     price,\n//     history: [\n//       {\n//         date: '2020-01-05',\n//         customerId: '11091700',\n//         amount: 3,\n//       },\n//       {\n//         date: '2020-01-02',\n//         customerId: 'Anonymous',\n//         amount: 1,\n//       },\n//     ],\n//   };\n// }\n// function Row(props) {\n//   const { row } = props;\n//   const [open, setOpen] = React.useState(false);\n//   return (\n//     <React.Fragment>\n//       <TableRow sx={{ '& > *': { borderBottom: 'unset' } }}>\n//         <TableCell>\n//           <IconButton\n//             aria-label=\"expand row\"\n//             size=\"small\"\n//             onClick={() => setOpen(!open)}\n//           >\n//             {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\n//           </IconButton>\n//         </TableCell>\n//         <TableCell component=\"th\" scope=\"row\">\n//           {row.title}\n//         </TableCell>\n//         <TableCell align=\"right\">{row.description}</TableCell>\n//         <TableCell align=\"right\">{row.created}</TableCell>\n//         <TableCell align=\"right\">{row.nickname}</TableCell>\n//         <TableCell align=\"right\">{row.protein}</TableCell>\n//       </TableRow>\n//       <TableRow>\n//         <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\n//           <Collapse in={open} timeout=\"auto\" unmountOnExit>\n//             <Box sx={{ margin: 1 }}>\n//               <Typography variant=\"h6\" gutterBottom component=\"div\">\n//                 History\n//               </Typography>\n//               <Table size=\"small\" aria-label=\"purchases\">\n//                 <TableHead>\n//                   <TableRow>\n//                     <TableCell>Date</TableCell>\n//                     <TableCell>Customer</TableCell>\n//                     <TableCell align=\"right\">Amount</TableCell>\n//                     <TableCell align=\"right\">Total price ($)</TableCell>\n//                   </TableRow>\n//                 </TableHead>\n//                 <TableBody>\n//                   {row.history.map((historyRow) => (\n//                     <TableRow key={historyRow.date}>\n//                       <TableCell component=\"th\" scope=\"row\">\n//                         {historyRow.date}\n//                       </TableCell>\n//                       <TableCell>{historyRow.customerId}</TableCell>\n//                       <TableCell align=\"right\">{historyRow.amount}</TableCell>\n//                       <TableCell align=\"right\">\n//                         {Math.round(historyRow.amount * row.price * 100) / 100}\n//                       </TableCell>\n//                     </TableRow>\n//                   ))}\n//                 </TableBody>\n//               </Table>\n//             </Box>\n//           </Collapse>\n//         </TableCell>\n//       </TableRow>\n//     </React.Fragment>\n//   );\n// }\n// Row.propTypes = {\n//   row: PropTypes.shape({\n//     calories: PropTypes.number.isRequired,\n//     carbs: PropTypes.number.isRequired,\n//     fat: PropTypes.number.isRequired,\n//     history: PropTypes.arrayOf(\n//       PropTypes.shape({\n//         amount: PropTypes.number.isRequired,\n//         customerId: PropTypes.string.isRequired,\n//         date: PropTypes.string.isRequired,\n//       }),\n//     ).isRequired,\n//     name: PropTypes.string.isRequired,\n//     price: PropTypes.number.isRequired,\n//     protein: PropTypes.number.isRequired,\n//   }).isRequired,\n// };\n// const rows = [\n//   createData('Frozen yoghurt', 159, 6.0, 24, 4.0, 3.99),\n//   createData('Ice cream sandwich', 237, 9.0, 37, 4.3, 4.99),\n//   createData('Eclair', 262, 16.0, 24, 6.0, 3.79),\n//   createData('Cupcake', 305, 3.7, 67, 4.3, 2.5),\n//   createData('Gingerbread', 356, 16.0, 49, 3.9, 1.5),\n// ];\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CollapsibleTable() {\n  _s();\n\n  const [state, setState] = React.useState([]);\n  const [hasError, setHasError] = React.useState(false);\n  React.useEffect(async () => {\n    axios.get(\"http://localhost:8080/api\").then(res => setState(res.data.test)).catch(err => setHasError(true));\n  }, []);\n  console.log(state);\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      \"aria-label\": \"collapsible table\",\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Dessert (100g serving)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"Calories\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"Fat\\xA0(g)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"Carbs\\xA0(g)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"Protein\\xA0(g)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: /*#__PURE__*/_jsxDEV(TableCell, {\n          align: \"right\",\n          children: state.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CollapsibleTable, \"UL25WozoBIm/ANqUkjctYWA3Lbw=\");\n\n_c = CollapsibleTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"CollapsibleTable\");","map":{"version":3,"sources":["C:/Users/82103/OneDrive/바탕 화면/firstGit/client/src/component/Table/CollapsibleTable.js"],"names":["React","PropTypes","Box","Collapse","IconButton","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Typography","Paper","KeyboardArrowDownIcon","KeyboardArrowUpIcon","axios","CollapsibleTable","state","setState","useState","hasError","setHasError","useEffect","get","then","res","data","test","catch","err","console","log","title"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,qBAAP,MAAkC,uCAAlC;AACA,OAAOC,mBAAP,MAAgC,qCAAhC;AACA,OAAOC,KAAP,MAAkB,OAAleAAe,SAASC,gBAAT,GAA4B;AAAA;;AAEvC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBlB,KAAK,CAACmB,QAAN,CAAe,EAAf,CAA1B;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BrB,KAAK,CAACmB,QAAN,CAAe,KAAf,CAAhC;AACEnB,EAAAA,KAAK,CAACsB,SAAN,CAAgB,YAAY;AAC1BP,IAAAA,KAAK,CAACQ,GAAN,CAAU,2BAAV,EAAuCC,IAAvC,CAA4CC,GAAG,IAAIP,QAAQ,CAACO,GAAG,CAACC,IAAJ,CAASC,IAAV,CAA3D,EAA4EC,KAA5E,CAAkFC,GAAG,IAAIR,WAAW,CAAC,IAAD,CAApG;AAA4G,GAD9G,EACgH,EADhH;AAEES,EAAAA,OAAO,CAACC,GAAR,CAAYd,KAAZ;AACN,sBACE,QAAC,cAAD;AAAgB,IAAA,SAAS,EAAEL,KAA3B;AAAA,2BACE,QAAC,KAAD;AAAO,oBAAW,mBAAlB;AAAA,8BACE,QAAC,SAAD;AAAA,+BACE,QAAC,QAAD;AAAA,kCACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE,QAAC,SAAD;AAAW,YAAA,KAAK,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE,QAAC,SAAD;AAAW,YAAA,KAAK,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE,QAAC,SAAD;AAAW,YAAA,KAAK,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF,eAME,QAAC,SAAD;AAAW,YAAA,KAAK,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAWE,QAAC,SAAD;AAAA,+BACA,QAAC,SAAD;AAAW,UAAA,KAAK,EAAC,OAAjB;AAAA,oBAA0BK,KAAK,CAACe;AAAhC;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;GA3BuBhB,gB;;KAAAA,gB","sourcesContent":["import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Box from '@mui/material/Box';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Typography from '@mui/material/Typography';\r\nimport Paper from '@mui/material/Paper';\r\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\n// function createData(name, calories, fat, carbs, protein, price) {\r\n//   return {\r\n//     name,\r\n//     calories,\r\n//     fat,\r\n//     carbs,\r\n//     protein,\r\n//     price,\r\n//     history: [\r\n//       {\r\n//         date: '2020-01-05',\r\n//         customerId: '11091700',\r\n//         amount: 3,\r\n//       },\r\n//       {\r\n//         date: '2020-01-02',\r\n//         customerId: 'Anonymous',\r\n//         amount: 1,\r\n//       },\r\n//     ],\r\n//   };\r\n// }\r\n\r\n// function Row(props) {\r\n//   const { row } = props;\r\n//   const [open, setOpen] = React.useState(false);\r\n\r\n//   return (\r\n//     <React.Fragment>\r\n//       <TableRow sx={{ '& > *': { borderBottom: 'unset' } }}>\r\n//         <TableCell>\r\n//           <IconButton\r\n//             aria-label=\"expand row\"\r\n//             size=\"small\"\r\n//             onClick={() => setOpen(!open)}\r\n//           >\r\n//             {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n//           </IconButton>\r\n//         </TableCell>\r\n//         <TableCell component=\"th\" scope=\"row\">\r\n//           {row.title}\r\n//         </TableCell>\r\n//         <TableCell align=\"right\">{row.description}</TableCell>\r\n//         <TableCell align=\"right\">{row.created}</TableCell>\r\n//         <TableCell align=\"right\">{row.nickname}</TableCell>\r\n//         <TableCell align=\"right\">{row.protein}</TableCell>\r\n//       </TableRow>\r\n//       <TableRow>\r\n//         <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\r\n//           <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n//             <Box sx={{ margin: 1 }}>\r\n//               <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n//                 History\r\n//               </Typography>\r\n//               <Table size=\"small\" aria-label=\"purchases\">\r\n//                 <TableHead>\r\n//                   <TableRow>\r\n//                     <TableCell>Date</TableCell>\r\n//                     <TableCell>Customer</TableCell>\r\n//                     <TableCell align=\"right\">Amount</TableCell>\r\n//                     <TableCell align=\"right\">Total price ($)</TableCell>\r\n//                   </TableRow>\r\n//                 </TableHead>\r\n//                 <TableBody>\r\n//                   {row.history.map((historyRow) => (\r\n//                     <TableRow key={historyRow.date}>\r\n//                       <TableCell component=\"th\" scope=\"row\">\r\n//                         {historyRow.date}\r\n//                       </TableCell>\r\n//                       <TableCell>{historyRow.customerId}</TableCell>\r\n//                       <TableCell align=\"right\">{historyRow.amount}</TableCell>\r\n//                       <TableCell align=\"right\">\r\n//                         {Math.round(historyRow.amount * row.price * 100) / 100}\r\n//                       </TableCell>\r\n//                     </TableRow>\r\n//                   ))}\r\n//                 </TableBody>\r\n//               </Table>\r\n//             </Box>\r\n//           </Collapse>\r\n//         </TableCell>\r\n//       </TableRow>\r\n//     </React.Fragment>\r\n//   );\r\n// }\r\n\r\n// Row.propTypes = {\r\n//   row: PropTypes.shape({\r\n//     calories: PropTypes.number.isRequired,\r\n//     carbs: PropTypes.number.isRequired,\r\n//     fat: PropTypes.number.isRequired,\r\n//     history: PropTypes.arrayOf(\r\n//       PropTypes.shape({\r\n//         amount: PropTypes.number.isRequired,\r\n//         customerId: PropTypes.string.isRequired,\r\n//         date: PropTypes.string.isRequired,\r\n//       }),\r\n//     ).isRequired,\r\n//     name: PropTypes.string.isRequired,\r\n//     price: PropTypes.number.isRequired,\r\n//     protein: PropTypes.number.isRequired,\r\n//   }).isRequired,\r\n// };\r\n\r\n// const rows = [\r\n//   createData('Frozen yoghurt', 159, 6.0, 24, 4.0, 3.99),\r\n//   createData('Ice cream sandwich', 237, 9.0, 37, 4.3, 4.99),\r\n//   createData('Eclair', 262, 16.0, 24, 6.0, 3.79),\r\n//   createData('Cupcake', 305, 3.7, 67, 4.3, 2.5),\r\n//   createData('Gingerbread', 356, 16.0, 49, 3.9, 1.5),\r\n// ];\r\n\r\nexport default function CollapsibleTable() {\r\n\r\n    const [state, setState] = React.useState([])\r\n    const [hasError, setHasError] = React.useState(false)\r\n      React.useEffect(async () => {\r\n        axios.get(\"http://localhost:8080/api\").then(res => setState(res.data.test)).catch(err => setHasError(true))}, []);\r\n        console.log(state);\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table aria-label=\"collapsible table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell />\r\n            <TableCell>Dessert (100g serving)</TableCell>\r\n            <TableCell align=\"right\">Calories</TableCell>\r\n            <TableCell align=\"right\">Fat&nbsp;(g)</TableCell>\r\n            <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell>\r\n            <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n        <TableCell align=\"right\">{state.title}</TableCell>\r\n          \r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}