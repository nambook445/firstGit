{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\82103\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\firstGit\\\\client\\\\src\\\\component\\\\Table\\\\CollapsibleTable.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Box from '@mui/material/Box';\nimport Collapse from '@mui/material/Collapse';\nimport IconButton from '@mui/material/IconButton';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Typography from '@mui/material/Typography';\nimport Paper from '@mui/material/Paper';\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\nimport axios from 'axios'; // function createData(name, calories, fat, carbs, protein, price) {\n//   return {\n//     name,\n//     calories,\n//     fat,\n//     carbs,\n//     protein,\n//     price,\n//     history: [\n//       {\n//         date: '2020-01-05',\n//         customerId: '11091700',\n//         amount: 3,\n//       },\n//       {\n//         date: '2020-01-02',\n//         customerId: 'Anonymous',\n//         amount: 1,\n//       },\n//     ],\n//   };\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Row(props) {\n  _s();\n\n  const {\n    row\n  } = props;\n  const [open, setOpen] = React.useState(false);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TableRow, {\n      sx: {\n        '& > *': {\n          borderBottom: 'unset'\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          \"aria-label\": \"expand row\",\n          size: \"small\",\n          onClick: () => setOpen(!open),\n          children: open ? /*#__PURE__*/_jsxDEV(KeyboardArrowUpIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 21\n          }, this) : /*#__PURE__*/_jsxDEV(KeyboardArrowDownIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 47\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        component: \"th\",\n        scope: \"row\",\n        children: row.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        align: \"right\",\n        children: row.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        align: \"right\",\n        children: row.created\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        align: \"right\",\n        children: row.nickname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        align: \"right\",\n        children: row.protein\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n      children: /*#__PURE__*/_jsxDEV(TableCell, {\n        style: {\n          paddingBottom: 0,\n          paddingTop: 0\n        },\n        colSpan: 6,\n        children: /*#__PURE__*/_jsxDEV(Collapse, {\n          in: open,\n          timeout: \"auto\",\n          unmountOnExit: true,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              margin: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              component: \"div\",\n              children: \"History\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Table, {\n              size: \"small\",\n              \"aria-label\": \"purchases\",\n              children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                children: /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Date\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 77,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Customer\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 78,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: \"Amount\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 79,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: \"Total price ($)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 80,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                children: row.history.map(historyRow => /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    component: \"th\",\n                    scope: \"row\",\n                    children: historyRow.date\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 86,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: historyRow.customerId\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 89,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: historyRow.amount\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 90,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"right\",\n                    children: Math.round(historyRow.amount * row.price * 100) / 100\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 91,\n                    columnNumber: 23\n                  }, this)]\n                }, historyRow.date, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n} // Row.propTypes = {\n//   row: PropTypes.shape({\n//     calories: PropTypes.number.isRequired,\n//     carbs: PropTypes.number.isRequired,\n//     fat: PropTypes.number.isRequired,\n//     history: PropTypes.arrayOf(\n//       PropTypes.shape({\n//         amount: PropTypes.number.isRequired,\n//         customerId: PropTypes.string.isRequired,\n//         date: PropTypes.string.isRequired,\n//       }),\n//     ).isRequired,\n//     name: PropTypes.string.isRequired,\n//     price: PropTypes.number.isRequired,\n//     protein: PropTypes.number.isRequired,\n//   }).isRequired,\n// };\n// const rows = [\n//   createData('Frozen yoghurt', 159, 6.0, 24, 4.0, 3.99),\n//   createData('Ice cream sandwich', 237, 9.0, 37, 4.3, 4.99),\n//   createData('Eclair', 262, 16.0, 24, 6.0, 3.79),\n//   createData('Cupcake', 305, 3.7, 67, 4.3, 2.5),\n//   createData('Gingerbread', 356, 16.0, 49, 3.9, 1.5),\n// ];\n\n\n_s(Row, \"xG1TONbKtDWtdOTrXaTAsNhPg/Q=\");\n\n_c = Row;\nexport default function CollapsibleTable() {\n  _s2();\n\n  const [state, setState] = React.useState([]);\n  const [hasError, setHasError] = React.useState(false);\n  React.useEffect(async () => {\n    axios.get(\"http://localhost:8080/api\").then(res => setState(res.data.test)).catch(err => setHasError(true));\n  }, []);\n  console.log(state);\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      \"aria-label\": \"collapsible table\",\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Dessert (100g serving)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"Calories\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"Fat\\xA0(g)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"Carbs\\xA0(g)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"Protein\\xA0(g)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          title: props.title\n        }, props.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(CollapsibleTable, \"UL25WozoBIm/ANqUkjctYWA3Lbw=\");\n\n_c2 = CollapsibleTable;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Row\");\n$RefreshReg$(_c2, \"CollapsibleTable\");","map":{"version":3,"sources":["C:/Users/82103/OneDrive/바탕 화면/firstGit/client/src/component/Table/CollapsibleTable.js"],"names":["React","PropTypes","Box","Collapse","IconButton","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Typography","Paper","KeyboardArrowDownIcon","KeyboardArrowUpIcon","axios","Row","props","row","open","setOpen","useState","borderBottom","title","description","created","nickname","protein","paddingBottom","paddingTop","margin","history","map","historyRow","date","customerId","amount","Math","round","price","CollapsibleTable","state","setState","hasError","setHasError","useEffect","get","then","res","data","test","catch","err","console","log","id"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Box from '@mui/material/Box';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Typography from '@mui/material/Typography';\r\nimport Paper from '@mui/material/Paper';\r\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\n// function createData(name, calories, fat, carbs, protein, price) {\r\n//   return {\r\n//     name,\r\n//     calories,\r\n//     fat,\r\n//     carbs,\r\n//     protein,\r\n//     price,\r\n//     history: [\r\n//       {\r\n//         date: '2020-01-05',\r\n//         customerId: '11091700',\r\n//         amount: 3,\r\n//       },\r\n//       {\r\n//         date: '2020-01-02',\r\n//         customerId: 'Anonymous',\r\n//         amount: 1,\r\n//       },\r\n//     ],\r\n//   };\r\n// }\r\n\r\nfunction Row(props) {\r\n  const { row } = props;\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <TableRow sx={{ '& > *': { borderBottom: 'unset' } }}>\r\n        <TableCell>\r\n          <IconButton\r\n            aria-label=\"expand row\"\r\n            size=\"small\"\r\n            onClick={() => setOpen(!open)}\r\n          >\r\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n          </IconButton>\r\n        </TableCell>\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          {row.title}\r\n        </TableCell>\r\n        <TableCell align=\"right\">{row.description}</TableCell>\r\n        <TableCell align=\"right\">{row.created}</TableCell>\r\n        <TableCell align=\"right\">{row.nickname}</TableCell>\r\n        <TableCell align=\"right\">{row.protein}</TableCell>\r\n      </TableRow>\r\n      <TableRow>\r\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\r\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n            <Box sx={{ margin: 1 }}>\r\n              <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                History\r\n              </Typography>\r\n              <Table size=\"small\" aria-label=\"purchases\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>Date</TableCell>\r\n                    <TableCell>Customer</TableCell>\r\n                    <TableCell align=\"right\">Amount</TableCell>\r\n                    <TableCell align=\"right\">Total price ($)</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {row.history.map((historyRow) => (\r\n                    <TableRow key={historyRow.date}>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {historyRow.date}\r\n                      </TableCell>\r\n                      <TableCell>{historyRow.customerId}</TableCell>\r\n                      <TableCell align=\"right\">{historyRow.amount}</TableCell>\r\n                      <TableCell align=\"right\">\r\n                        {Math.round(historyRow.amount * row.price * 100) / 100}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </Box>\r\n          </Collapse>\r\n        </TableCell>\r\n      </TableRow>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\n// Row.propTypes = {\r\n//   row: PropTypes.shape({\r\n//     calories: PropTypes.number.isRequired,\r\n//     carbs: PropTypes.number.isRequired,\r\n//     fat: PropTypes.number.isRequired,\r\n//     history: PropTypes.arrayOf(\r\n//       PropTypes.shape({\r\n//         amount: PropTypes.number.isRequired,\r\n//         customerId: PropTypes.string.isRequired,\r\n//         date: PropTypes.string.isRequired,\r\n//       }),\r\n//     ).isRequired,\r\n//     name: PropTypes.string.isRequired,\r\n//     price: PropTypes.number.isRequired,\r\n//     protein: PropTypes.number.isRequired,\r\n//   }).isRequired,\r\n// };\r\n\r\n// const rows = [\r\n//   createData('Frozen yoghurt', 159, 6.0, 24, 4.0, 3.99),\r\n//   createData('Ice cream sandwich', 237, 9.0, 37, 4.3, 4.99),\r\n//   createData('Eclair', 262, 16.0, 24, 6.0, 3.79),\r\n//   createData('Cupcake', 305, 3.7, 67, 4.3, 2.5),\r\n//   createData('Gingerbread', 356, 16.0, 49, 3.9, 1.5),\r\n// ];\r\n\r\nexport default function CollapsibleTable() {\r\n\r\n    const [state, setState] = React.useState([])\r\n    const [hasError, setHasError] = React.useState(false)\r\n      React.useEffect(async () => {\r\n        axios.get(\"http://localhost:8080/api\").then(res => setState(res.data.test)).catch(err => setHasError(true))}, []);\r\n        console.log(state);\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table aria-label=\"collapsible table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell />\r\n            <TableCell>Dessert (100g serving)</TableCell>\r\n            <TableCell align=\"right\">Calories</TableCell>\r\n            <TableCell align=\"right\">Fat&nbsp;(g)</TableCell>\r\n            <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell>\r\n            <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n        \r\n            <Row key={props.id} title={props.title} />\r\n          \r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}