{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\82103\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\firstGit\\\\client\\\\src\\\\component\\\\Table\\\\CollapsibleTable.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTheme } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableFooter from '@mui/material/TableFooter';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport IconButton from '@mui/material/IconButton';\nimport FirstPageIcon from '@mui/icons-material/FirstPage';\nimport KeyboardArrowLeft from '@mui/icons-material/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@mui/icons-material/KeyboardArrowRight';\nimport LastPageIcon from '@mui/icons-material/LastPage';\nimport axios from 'axios';\nimport Accordion from '@mui/material/Accordion';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport Typography from '@mui/material/Typography';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TablePaginationActions(props) {\n  _s();\n\n  const theme = useTheme();\n  const {\n    count,\n    page,\n    rowsPerPage,\n    onPageChange\n  } = props;\n\n  const handleFirstPageButtonClick = event => {\n    onPageChange(event, 0);\n  };\n\n  const handleBackButtonClick = event => {\n    onPageChange(event, page - 1);\n  };\n\n  const handleNextButtonClick = event => {\n    onPageChange(event, page + 1);\n  };\n\n  const handleLastPageButtonClick = event => {\n    onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      flexShrink: 0,\n      ml: 2.5\n    },\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: handleFirstPageButtonClick,\n      disabled: page === 0,\n      \"aria-label\": \"first page\",\n      children: theme.direction === 'rtl' ? /*#__PURE__*/_jsxDEV(LastPageIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 38\n      }, this) : /*#__PURE__*/_jsxDEV(FirstPageIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 57\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: handleBackButtonClick,\n      disabled: page === 0,\n      \"aria-label\": \"previous page\",\n      children: theme.direction === 'rtl' ? /*#__PURE__*/_jsxDEV(KeyboardArrowRight, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 38\n      }, this) : /*#__PURE__*/_jsxDEV(KeyboardArrowLeft, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 63\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: handleNextButtonClick,\n      disabled: page >= Math.ceil(count / rowsPerPage) - 1,\n      \"aria-label\": \"next page\",\n      children: theme.direction === 'rtl' ? /*#__PURE__*/_jsxDEV(KeyboardArrowLeft, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 38\n      }, this) : /*#__PURE__*/_jsxDEV(KeyboardArrowRight, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 62\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: handleLastPageButtonClick,\n      disabled: page >= Math.ceil(count / rowsPerPage) - 1,\n      \"aria-label\": \"last page\",\n      children: theme.direction === 'rtl' ? /*#__PURE__*/_jsxDEV(FirstPageIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 38\n      }, this) : /*#__PURE__*/_jsxDEV(LastPageIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 58\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TablePaginationActions, \"VrMvFCCB9Haniz3VCRPNUiCauHs=\", false, function () {\n  return [useTheme];\n});\n\n_c = TablePaginationActions;\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired\n};\nexport default function CustomPaginationActionsTable() {\n  _s2();\n\n  const [state, setState] = React.useState([]);\n  const [hasError, setHasError] = React.useState(false); //Accordion component\n\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleChange = panel => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : false);\n  }; // condition\n\n\n  const [updateMode, setUpdateMode] = React.useState(false);\n\n  const toggle = () => setUpdateMode(!updateMode);\n\n  React.useEffect(() => {\n    console.log(updateMode);\n  }, [updateMode]);\n  const renderUpdataMode = updateMode ? `\n    disabled\n    value={state.description}` : `defaultValue={state.description}`; //Axios \n\n  React.useEffect(async () => {\n    await axios.get(\"http://localhost:8080/api\").then(res => setState(res.data.test)).catch(err => setHasError(true));\n  }, []);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const rows = state; // Avoid a layout jump when reaching the last page with empty rows.\n\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      sx: {\n        minWidth: 500\n      },\n      \"aria-label\": \"custom pagination table\",\n      children: [/*#__PURE__*/_jsxDEV(TableBody, {\n        children: [(rowsPerPage > 0 ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage) : rows).map(state => /*#__PURE__*/_jsxDEV(Accordion, {\n          expanded: expanded === state.id,\n          onChange: handleChange(state.id),\n          children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n            expandIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 29\n            }, this),\n            \"aria-controls\": \"panel1bh-content\",\n            id: \"panel1bh-header\",\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              sx: {\n                width: '33%',\n                flexShrink: 0\n              },\n              children: state.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              sx: {\n                width: '33%',\n                flexShrink: 0\n              },\n              children: state.created\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              sx: {\n                width: '33%',\n                flexShrink: 0\n              },\n              children: state.nickname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              id: \"outlined-multiline-static\",\n              name: \"description\",\n              label: \"\\uBCF8\\uBB38\",\n              multiline: true,\n              rows: 10,\n              margin: \"normal\",\n              color: \"success\",\n              ...renderUpdataMode,\n              sx: {\n                width: '100%'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: toggle,\n              children: \"\\uC218\\uC815\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this)), emptyRows > 0 && /*#__PURE__*/_jsxDEV(TableRow, {\n          style: {\n            height: 53 * emptyRows\n          },\n          children: /*#__PURE__*/_jsxDEV(TableCell, {\n            colSpan: 6\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableFooter, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: /*#__PURE__*/_jsxDEV(TablePagination, {\n            rowsPerPageOptions: [5, 10, 25, {\n              label: 'All',\n              value: -1\n            }],\n            colSpan: 3,\n            count: rows.length,\n            rowsPerPage: rowsPerPage,\n            page: page,\n            SelectProps: {\n              inputProps: {\n                'aria-label': 'rows per page'\n              },\n              native: true\n            },\n            onPageChange: handleChangePage,\n            onRowsPerPageChange: handleChangeRowsPerPage,\n            ActionsComponent: TablePaginationActions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(CustomPaginationActionsTable, \"SGyx8htH7vCwbF8wMb5EppInAXg=\");\n\n_c2 = CustomPaginationActionsTable;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TablePaginationActions\");\n$RefreshReg$(_c2, \"CustomPaginationActionsTable\");","map":{"version":3,"sources":["C:/Users/82103/OneDrive/바탕 화면/firstGit/client/src/component/Table/CollapsibleTable.js"],"names":["React","PropTypes","useTheme","Box","Table","TableBody","TableCell","TableContainer","TableFooter","TablePagination","TableRow","Paper","IconButton","FirstPageIcon","KeyboardArrowLeft","KeyboardArrowRight","LastPageIcon","axios","Accordion","AccordionDetails","AccordionSummary","Typography","ExpandMoreIcon","TextField","Button","TablePaginationActions","props","theme","count","page","rowsPerPage","onPageChange","handleFirstPageButtonClick","event","handleBackButtonClick","handleNextButtonClick","handleLastPageButtonClick","Math","max","ceil","flexShrink","ml","direction","propTypes","number","isRequired","func","CustomPaginationActionsTable","state","setState","useState","hasError","setHasError","expanded","setExpanded","handleChange","panel","isExpanded","updateMode","setUpdateMode","toggle","useEffect","console","log","renderUpdataMode","get","then","res","data","test","catch","err","setPage","setRowsPerPage","rows","emptyRows","length","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","target","value","minWidth","slice","map","id","width","title","created","nickname","height","label","inputProps","native"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport Box from '@mui/material/Box';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableFooter from '@mui/material/TableFooter';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Paper from '@mui/material/Paper';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport FirstPageIcon from '@mui/icons-material/FirstPage';\r\nimport KeyboardArrowLeft from '@mui/icons-material/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@mui/icons-material/KeyboardArrowRight';\r\nimport LastPageIcon from '@mui/icons-material/LastPage';\r\nimport axios from 'axios';\r\nimport Accordion from '@mui/material/Accordion';\r\nimport AccordionDetails from '@mui/material/AccordionDetails';\r\nimport AccordionSummary from '@mui/material/AccordionSummary';\r\nimport Typography from '@mui/material/Typography';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\n\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\n\r\n\r\nfunction TablePaginationActions(props) {\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onPageChange } = props;\r\n\r\n  const handleFirstPageButtonClick = (event) => {\r\n    onPageChange(event, 0);\r\n  };\r\n\r\n  const handleBackButtonClick = (event) => {\r\n    onPageChange(event, page - 1);\r\n  };\r\n\r\n  const handleNextButtonClick = (event) => {\r\n    onPageChange(event, page + 1);\r\n  };\r\n\r\n  const handleLastPageButtonClick = (event) => {\r\n    onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ flexShrink: 0, ml: 2.5 }}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleBackButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"previous page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </Box>\r\n  );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onPageChange: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\n\r\n\r\nexport default function CustomPaginationActionsTable() {\r\n  const [state, setState] = React.useState([])\r\n  const [hasError, setHasError] = React.useState(false)\r\n  //Accordion component\r\n  const [expanded, setExpanded] = React.useState(false);\r\n  const handleChange = (panel) => (event, isExpanded) => {\r\n    setExpanded(isExpanded ? panel : false);\r\n  };\r\n  // condition\r\n  const [updateMode, setUpdateMode] = React.useState(false)\r\n  const toggle = () => setUpdateMode(!updateMode)\r\n  React.useEffect(()=>{\r\n    console.log(updateMode);\r\n  },[updateMode]);\r\n  const renderUpdataMode = updateMode\r\n  ? `\r\n    disabled\r\n    value={state.description}`\r\n  : `defaultValue={state.description}` \r\n  \r\n  //Axios \r\n  React.useEffect(async () => {\r\n    await axios.get(\"http://localhost:8080/api\").then(res => setState(res.data.test)).catch(err => setHasError(true))}, []);\r\n    \r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n    const rows = state;\r\n\r\n  // Avoid a layout jump when reaching the last page with empty rows.\r\n  const emptyRows =\r\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table sx={{ minWidth: 500 }} aria-label=\"custom pagination table\">\r\n        <TableBody>\r\n          {(rowsPerPage > 0\r\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : rows\r\n          ).map((state) => (\r\n            <Accordion expanded={expanded === state.id} onChange={handleChange(state.id)}>\r\n              <AccordionSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls=\"panel1bh-content\"\r\n                id=\"panel1bh-header\"\r\n              >\r\n                <Typography sx={{ width: '33%', flexShrink: 0 }}>\r\n                  {state.title}\r\n                </Typography>\r\n                <Typography sx={{ width: '33%', flexShrink: 0 }}>\r\n                  {state.created}\r\n                </Typography>\r\n                <Typography sx={{ width: '33%', flexShrink: 0 }}>\r\n                  {state.nickname}\r\n                </Typography>\r\n              </AccordionSummary>\r\n              <AccordionDetails>\r\n              <TextField\r\n                id=\"outlined-multiline-static\"\r\n                name=\"description\"\r\n                label=\"본문\"\r\n                multiline\r\n                rows={10}\r\n                margin=\"normal\"\r\n                color=\"success\"\r\n                {...renderUpdataMode}\r\n                sx={{width: '100%'}}\r\n              />\r\n              <Button onClick={toggle}>수정</Button>\r\n              </AccordionDetails>\r\n            </Accordion>\r\n          ))}\r\n          {emptyRows > 0 && (\r\n            <TableRow style={{ height: 53 * emptyRows }}>\r\n              <TableCell colSpan={6} />\r\n            </TableRow>\r\n          )}\r\n        </TableBody>\r\n        <TableFooter>\r\n          <TableRow>\r\n            <TablePagination\r\n              rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\r\n              colSpan={3}\r\n              count={rows.length}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              SelectProps={{\r\n                inputProps: {\r\n                  'aria-label': 'rows per page',\r\n                },\r\n                native: true,\r\n              }}\r\n              onPageChange={handleChangePage}\r\n              onRowsPerPageChange={handleChangeRowsPerPage}\r\n              ActionsComponent={TablePaginationActions}\r\n            />\r\n          </TableRow>\r\n        </TableFooter>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}